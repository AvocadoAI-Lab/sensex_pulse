import {GroupSummary} from '../summary';
import {Vulnerability} from '@/types/wql';

interface VulnerabilityMetrics {
    totalCount: number;
    criticalCount: number;
    highCount: number;
    mediumCount: number;
    lowCount: number;
    topPackages: Array<{ name: string; count: number }>;
}

function analyzeVulnerabilities(summary: GroupSummary): VulnerabilityMetrics {
    const allVulnerabilities = summary.agentSummaries.flatMap(agent => agent.vulnerabilities);
    const packageVulnCount = new Map<string, number>();

    // Count vulnerabilities by package
    allVulnerabilities.forEach(vuln => {
        const count = packageVulnCount.get(vuln.package.name) || 0;
        packageVulnCount.set(vuln.package.name, count + 1);
    });

    // Get top affected packages
    const topPackages = Array.from(packageVulnCount.entries())
        .sort((a, b) => b[1] - a[1])
        .slice(0, 5)
        .map(([name, count]) => ({ name, count }));

    return {
        totalCount: allVulnerabilities.length,
        criticalCount: allVulnerabilities.filter(v => v.severity.toLowerCase() === 'critical').length,
        highCount: allVulnerabilities.filter(v => v.severity.toLowerCase() === 'high').length,
        mediumCount: allVulnerabilities.filter(v => v.severity.toLowerCase() === 'medium').length,
        lowCount: allVulnerabilities.filter(v => v.severity.toLowerCase() === 'low').length,
        topPackages
    };
}

function generateVulnerabilityTable(vulnerabilities: Vulnerability[]): string {
    if (vulnerabilities.length === 0) {
        return `
        <div class="bg-gray-50 p-6 rounded-lg text-center text-gray-600">
            No critical vulnerabilities detected
        </div>`;
    }

    return `
    <div class="overflow-x-auto">
        <table class="min-w-full bg-white rounded-lg overflow-hidden">
            <thead class="bg-gray-100">
                <tr>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">CVE</th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Package</th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Severity</th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">CVSS Score</th>
                </tr>
            </thead>
            <tbody class="divide-y divide-gray-200">
                ${vulnerabilities.map(vuln => `
                <tr>
                    <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-blue-600">${vuln.cve}</td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                        ${vuln.package.name} (${vuln.package.version})
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap">
                        <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full 
                            ${vuln.severity.toLowerCase() === 'critical' ? 'bg-red-100 text-red-800' :
                            vuln.severity.toLowerCase() === 'high' ? 'bg-orange-100 text-orange-800' :
                            vuln.severity.toLowerCase() === 'medium' ? 'bg-yellow-100 text-yellow-800' :
                            'bg-green-100 text-green-800'}">
                            ${vuln.severity}
                        </span>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                        ${vuln.cvss.cvss3?.base_score || vuln.cvss.cvss2?.base_score || 'N/A'}
                    </td>
                </tr>
                `).join('')}
            </tbody>
        </table>
    </div>`;
}

function generateAffectedPackagesChart(metrics: VulnerabilityMetrics): string {
    const maxCount = Math.max(...metrics.topPackages.map(p => p.count));
    
    return `
    <div class="bg-white p-6 rounded-lg shadow-lg">
        <h4 class="text-lg font-medium mb-4">Most Affected Packages</h4>
        <div class="space-y-4">
            ${metrics.topPackages.map(pkg => `
            <div>
                <div class="flex items-center justify-between mb-1">
                    <span class="text-sm font-medium text-gray-600">${pkg.name}</span>
                    <span class="text-sm text-gray-500">${pkg.count} vulnerabilities</span>
                </div>
                <div class="w-full bg-gray-200 rounded-full h-2">
                    <div class="bg-blue-600 h-2 rounded-full" style="width: ${(pkg.count / maxCount) * 100}%"></div>
                </div>
            </div>
            `).join('')}
        </div>
    </div>`;
}

export function generateVulnerabilityAnalysis(summary: GroupSummary): string {
    const metrics = analyzeVulnerabilities(summary);
    
    return `
    <div class="w-full min-h-[297mm] bg-white p-12">
        <div class="max-w-4xl mx-auto">
            <h2 class="text-3xl font-bold mb-8">Vulnerability Analysis</h2>
            
            <div class="grid grid-cols-1 md:grid-cols-4 gap-6 mb-12">
                <div class="bg-white p-6 rounded-lg shadow-lg border border-gray-200">
                    <h3 class="text-sm font-medium text-gray-500 mb-1">Total Vulnerabilities</h3>
                    <p class="text-2xl font-bold text-gray-900">${metrics.totalCount}</p>
                </div>
                <div class="bg-white p-6 rounded-lg shadow-lg border border-red-200">
                    <h3 class="text-sm font-medium text-red-500 mb-1">Critical</h3>
                    <p class="text-2xl font-bold text-red-600">${metrics.criticalCount}</p>
                </div>
                <div class="bg-white p-6 rounded-lg shadow-lg border border-orange-200">
                    <h3 class="text-sm font-medium text-orange-500 mb-1">High</h3>
                    <p class="text-2xl font-bold text-orange-600">${metrics.highCount}</p>
                </div>
                <div class="bg-white p-6 rounded-lg shadow-lg border border-yellow-200">
                    <h3 class="text-sm font-medium text-yellow-500 mb-1">Medium</h3>
                    <p class="text-2xl font-bold text-yellow-600">${metrics.mediumCount}</p>
                </div>
            </div>

            ${generateAffectedPackagesChart(metrics)}

            <div class="mt-12">
                <h3 class="text-xl font-semibold mb-6">Critical Vulnerabilities</h3>
                ${generateVulnerabilityTable(summary.criticalVulnerabilities)}
            </div>

            <div class="mt-12 bg-orange-50 p-8 rounded-lg">
                <h3 class="text-xl font-semibold mb-4">Remediation Priorities</h3>
                <ul class="space-y-4">
                    ${metrics.criticalCount > 0 ? `
                    <li class="flex items-start">
                        <span class="text-red-500 mr-2">1.</span>
                        <div>
                            <p class="font-medium">Address Critical Vulnerabilities</p>
                            <p class="text-sm text-gray-600">Immediately patch or mitigate ${metrics.criticalCount} critical vulnerabilities to prevent potential exploitation.</p>
                        </div>
                    </li>` : ''}
                    ${metrics.highCount > 0 ? `
                    <li class="flex items-start">
                        <span class="text-orange-500 mr-2">2.</span>
                        <div>
                            <p class="font-medium">Resolve High-Risk Issues</p>
                            <p class="text-sm text-gray-600">Plan remediation for ${metrics.highCount} high-severity vulnerabilities within the next update cycle.</p>
                        </div>
                    </li>` : ''}
                    ${metrics.topPackages.length > 0 ? `
                    <li class="flex items-start">
                        <span class="text-blue-500 mr-2">3.</span>
                        <div>
                            <p class="font-medium">Focus on Most Affected Packages</p>
                            <p class="text-sm text-gray-600">Prioritize updates for ${metrics.topPackages[0].name} (${metrics.topPackages[0].count} vulnerabilities) and other frequently affected packages.</p>
                        </div>
                    </li>` : ''}
                </ul>
            </div>
        </div>
    </div>
    <div class="page-break"></div>`;
}
